<!--
/*****************************************************************************/
/*  Copyright 2020 WSL Institute for Snow and Avalanche Research  SLF-DAVOS  */
/*****************************************************************************/
/* This file is part of INIshell.
INIshell is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

INIshell is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with INIshell.  If not, see <http://www.gnu.org/licenses/>.
*/
-->

<!--
INIshell include file for timeseries input plugin definitions
Please include meteoio_parametergroups before use!
-->

<inishell_include>

	<!-- Alternative panel: METEOIO_TS_IN -->
	<parametergroup name="METEOIO_TS_IN">
		<!-- it's nice to give defaults to non-optional keys (no 'unsaved changes' warning: -->
		<parameter type="helptext" wrap="true">
			<help>The plugins in the dropdown menu below that are italicized require third-party libraries that might not be installed on your system. Used to read in data from stations.</help>
		</parameter>
		<parameter key="METEO" label="Select METEO data plugin:" type="alternative" optional="false" default="SMET" pre-generate="false">
			<option value="A3D">
				<parameter key="METEOPATH" type="path" optional="false">
					<help>Path to the meteorological files; this path must exist, it won't be created</help>
				</parameter>
				<help>Original Alpine3D meteo files [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/a3d.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="ALPUG">
				<reference name="ALPUG_IN"/>
				<help>Data files generated by the ALPUG meteo stations [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/alpug.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="ARGOS">
				<reference name="ARGOS_IN"/>
				<help>Data files transmitted by the ARGOS system [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/argosio.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="COSMOXML" italic="true">
				<reference name="COSMO_IN"/>
				<help>MeteoSwiss COSMO's postprocessing XML format [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/cosmoxml.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="CSV" bold="true">
				<reference name="CSV_IN"/>
				<help>Comma separated files [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/csvio.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="BUFR" italic="true">
				<reference name="BUFR_IN"/>
				<help>BUFR meteo files [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/bufr.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="DBO" italic="true">
				<reference name="DBO_IN"/>
				<help>Connects to SLF's DBO web service interface [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/dbo.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="GEOTOP">
				<reference name="GEOTOP_IN"/>
				<help>GeoTop meteo files [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/geotop.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="GOES">
				<reference name="GOES_IN"/>
				<help>Meteo files transmitted by the GOES satellites [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/goesio.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="GRIB" italic="true">
				<reference name="GRIB_METEO_IN"/>
				<help>GRIB meteo grid files [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/gribio.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="iCSV">
				<reference name="iCSV_IN"/>
				<help>iCSV data files [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/icsvio.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="IMIS" italic="true">
				<reference name="IMIS_IN" />
				<help>SLF's IMIS database [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/imis.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="METEOBLUE" italic="true">
				<reference name="METEOBLUE_IN"/>
				<help>Meteo timeseries provided through the webservice API of MeteoBlue [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/meteoblue.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="MYSQL" italic="true">
				<reference name="MYSQL_IN"/>
				<help>Connects to a MySQL database, with a choice of schema [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/mysql.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="NETCDF" bold="true" italic="true">
				<reference name="NETCDF_IN"/>
				<help>NetCDF grids and timeseries [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/netcdf.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="OSHD" italic="true">
				<reference name="OSHD_METEO_IN"/>
				<help>OSHD generated binary Matlab files [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/oshd.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<o value="PMOD"><help>Raw data files from Pmod/Wrc [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/pmodio.html&quot;&gt;more…&lt;/a&gt;]</help></o>
			<option value="PSQL" italic="true">
				<reference name="PSQL_IN"/>
				<help>Connects to PostgreSQL database [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/psqlio.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="SASE" italic="true">
				<help>Connects to the SASE database [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/sase.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="SMET" bold="true">
				<reference name="SMET_IN"/>
				<help>SMET data files [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/smetio.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="SNOWPACK">
				<reference name="SNOWPACK_IN"/>
				<help>Original SNOWPACK meteo files [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/snowpack.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="SYNTH">
				<reference name="SYNTH"/>
				<help>Generation of synthetic forcings [&lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/synthio.html&quot;&gt;more…&lt;/a&gt;]</help>
			</option>
			<option value="NONE">
				<help>Only use in the special case of only reading gridded data and no meteo data. Can not be used with meteoio_timeseries, i.e. the inpuilt meteoio application.</help>
			</option>
			<help>See &lt;a href=&quot;https://meteoio.slf.ch/doc-release/html/data_sources.html&quot;&gt;MeteoIO's help&lt;/a&gt; for more information</help>
		</parameter> <!-- end METEOIO_TS_IN -->
	</parametergroup>

	<!-- ALPUG -->
	<parametergroup name="ALPUG_IN">
		<parameter key="METEOPATH" type="path" mode="input" optional="false">
			<help>Path to the data files; this path MUST exist, it won't be created</help>
		</parameter>
		<reference name="STATIONGROUP_FILES"/>
		<parameter key="METAFILE" type="file" mode="input" optional="false">
			<help>Absolute filename of the metadata file</help>
		</parameter>
		<parameter key="WRAP_MONTH" type="number" format="integer+" min="1" max="12" default="10" optional="false" notoggle="true">
			<help>month when a new file is started</help>
		</parameter>
		<parameter key="ALPUG_FIELDS" type="text" default="%,%,ID,timestamp,VW,VW_MAX,DW,TA,RH, RSWR,HS,%,%,%,%,%,TSG,%,%,%,TSS,ISWR,P" size="large" optional="false">
			<help>Description of the fields (using % to mark the fields to skip)</help>
		</parameter>
	</parametergroup>

	<!-- ARGOS -->
	<parametergroup name="ARGOS_IN">
		<parameter key="METEOPATH" type="path" optional="false">
			<help>directory where to read the data files from</help>
		</parameter>
		<parameter key="ARGOS_EXT" type="text" size="small">
			<help>extension of Argos data files to use when no FILE# keyword has been provided</help>
		</parameter>
		<parameter key="METEOPATH_RECURSIVE" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>when no METEOFILE# keyword has been defined, should all files under METEOPATH be searched recursively?</help>
		</parameter>
		<reference name="FILESGROUP"/>
		<parameter key="METAFILE" type="file" mode="input" optional="false">
			<help>an ini file that contains all the metadata, for each station that has to be read</help>
		</parameter>
		<parameter key="ARGOS_DEBUG" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>should extra (ie very verbose) information be displayed?</help>
		</parameter>
	</parametergroup>

	<!-- COSMO -->
	<parametergroup name="COSMO_IN">
		<parameter key="METEOPATH" type="path" optional="false">
			<help>Path to the data files; this path MUST exist, it won't be created</help>
		</parameter>
		<parameter key="METEO_PREFIX" type="text">
			<help>Specify the prefix that stands ahead of the numerical date in the filenames. This is used for
				filtering which files to read when reading a whole directory but also in any case to help extract the date
				of the first timestep from the filename.</help>
		</parameter>
		<parameter key="METEO_EXT" type="text" default=".xml" size="small">
			<help>Specify the extension of the input files (default ".xml", specify "none" to get an empty string</help>
		</parameter>
		<parameter key="METEOFILE" type="filename" path="%INPUT::METEOPATH" mode="input" optional="true">
			<option extension="XML files (*.xml *.XML)"/>
			<option extension="All files (*.*)"/>
			<help>Specify the XML file that contains the data (in &lt;code&gt;METEOPATH&lt;/code&gt;)</help>
		</parameter>
		<parameter key="IMIS_STATIONS" type="alternative" default="false">
			<option value="true"/>
			<option value="false"/>
			<help>Strip the provided station names of their number to fit the IMIS naming scheme with the COSMO-CH naming scheme</help>
		</parameter>
		<parameter key="USE_MODEL_LOC" type="alternative" default="true">
			<option value="true"/>
			<option value="false"/>
			<help>If set to false, the true station location (lat, lon, altitude) is used. Otherwise, it uses the model location (default)</help>
		</parameter>
		<parameter key="XML_ENCODING" type="alternative">
			<option value="UTF-8"/>
			<option value="UTF-16-LE"/>
			<option value="UTF-16-BE"/>
			<option value="UCS-4-LE"/>
			<option value="UCS-4-BE"/>
			<option value="UCS-4-2143"/>
			<option value="UCS-4-3412"/>
			<option value="UCS-2"/>
			<option value="EBCDIC"/>
			<option value="ISO-8859-1"/>
			<option value="ISO-8859-2"/>
			<option value="ISO-8859-3"/>
			<option value="ISO-8859-4"/>
			<option value="ISO-8859-5"/>
			<option value="ISO-8859-6"/>
			<option value="ISO-8859-7"/>
			<option value="ISO-8859-8"/>
			<option value="ISO-8859-9"/>
			<option value="ISO-2022-JP"/>
			<option value="SHIFT-JIS"/>
			<option value="EUC-JP"/>
			<option value="ASCII"/>
			<help>Force the input file encoding, overriding the file's own encoding declaration</help>
		</parameter>
		<reference name="STATIONGROUP_NAMES"/>
	</parametergroup>

	<!-- CSV -->
	<parametergroup name="CSV_IN">
		<parameter key="METEOPATH" type="path" optional="false">
			<help>Path to the csv files; this path must exist, it won't be created</help>
		</parameter>
		<parameter key="METEOPATH_RECURSIVE" type="alternative">
			<option value="TRUE"/>
			<option value="FALSE"/>
			<help>If set to true, &lt;code&gt;METEOPATH&lt;/code&gt; will be search recursively for data files</help>
		</parameter>
		<parameter key="CSV_FILE_EXTENSION" type="text" default=".csv" size="small">
			<help>When scanning a directory for all csv files, which extension to consider (only used when no &lt;code&gt;METEOFILE&lt;/code&gt; key is defined)</help>
		</parameter>
		<parameter key="CSV_SILENT_ERRORS" type="alternative">
			<option value="TRUE"/>
			<option value="FALSE"/>
			<help>If set to true, lines that can not be read are silently ignored (has priority over &lt;code&gt;CSV_ERRORS_TO_NODATA&lt;/code&gt;)</help>
		</parameter>
		<parameter key="CSV_ERRORS_TO_NODATA" type="alternative">
			<option value="TRUE"/>
			<option value="FALSE"/>
			<help>If set to true, fields that can not be parsed are assigned &lt;code&gt;nodata&lt;/code&gt;</help>
		</parameter>
		
		<parameter type="spacer" height="15"/>
		
		<parameter key="METEOFILE#" type="grid" replicate="true"> <!-- a grid without raster positions aligns vertically -->
			<option>
				<parameter key="METEOFILE#" type="filename" path="%INPUT::METEOPATH" mode="input" optional="false">
					<option extension="Comma separated files (*.csv *.CSV *.dat *.DAT)"/>
					<option extension="All files (*.*)"/>
					<help>File name containing the data for meteofile number #</help>
				</parameter>
			</option>
			<option>
				<reference name="CSV_NUMBERED_METEOFILE"/>
			</option>
			<help>Enter file name and position for meteofile number #</help>
		</parameter>
		
		<parameter type="spacer" height="15"/>
		<parameter type="helptext" wrap="true">
			<help>The settings below apply to all meteofiles, except when overwritten by meteofile specific settings (as set within each METEOFILE# input)</help>
		</parameter>
		
		<frame caption="Metadata" color="#c4c4c4" collapsed="true">
			<parameter key="CSV_NAME" type="text">
				<help>A descriptive station name to use (if provided, has priority over the special headers). Example: "Davos::SLF-station"</help>
			</parameter>
			<parameter key="CSV_ID" type="text">
				<help>The (short) station ID to use (if provided, has priority over the special headers). The station ID is often used to built the output file name as well as to apply specific processing at specific stations, if necessary. Example: "SLF2"</help>
			</parameter>
			<parameter key="CSV_SLOPE" type="number" format="integer+" min="0" max="90">
				<help>The slope angle at the station, in degrees (if providing a slope, also provide an azimuth)</help>
			</parameter>
			<parameter key="CSV_AZIMUTH" type="number" format="integer+" min="0" max="360">
				<help>The slope azimuth at the station, in degrees from North </help>
			</parameter>
			<parameter key="POSITION" type="text" validate="coordinates">
				<help>Coordinates are given as lat/lon/alt or easting/northing/alt such as &lt;b&gt;&lt;i&gt;latlon (46.75, 9.80, 2200)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;latlon (46d 48' 44.553", 9d 50' 50.694", 1550)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;xy(198754, 723458, 2200) [N,E,Alt]&lt;/i&gt;&lt;/b&gt;</help>
			</parameter>
			<parameter key="CSV_SPECIAL_HEADERS" type="text">
				<help>Description of how to extract more metadata out of the headers, such as &lt;code&gt;name:1:3 id:2:5 lat:3:2 lon:3:4 alt:3:6&lt;/code&gt;</help>
			</parameter>
			<parameter key="CSV_FILENAME_SPEC" type="text">
				<help>Pattern to parse the filename and extract metadata out of it, such as &lt;code&gt;{ID}_{NAME}-{SKIP}_-_{PARAM}&lt;/code&gt;</help>
			</parameter>
		</frame>
		
		<frame caption="Header handling" color="#c4c4c4" collapsed="true">
			<parameter key="CSV_NR_HEADERS" type="number" format="integer+" default="1" notoggle="true">
				<help>Number of header lines</help>
			</parameter>
			<parameter key="CSV_HEADER_DELIMITER" type="text" default="" size="small">
				<help>different field delimiter to use in header lines</help>
			</parameter>
			<parameter key="CSV_HEADER_REPEAT_MK" type="text" size="large">
				<help>A string that is used to signal another copy of the headers mixed with the data in the file (the matching is done anywhere in the line, that line is not considered during processing)</help>
			</parameter>
			<parameter key="CSV_UNITS_SOURCE" type="alternative">
				<option value="FROM HEADERS">
					<parameter key="CSV_UNITS_HEADERS" type="number" format="integer+" notoggle="true">
						<help>Header line providing the measurement units</help>
					</parameter>
				</option>
				<option value="FROM INI">
					<parameter key="CSV_UNITS" type="text" size="large">
						<help>Space delimited list of units to use for the columns (including the timestamp). No units is represented by "-".</help>
					</parameter>
				</option>
				<help>It is possible to provide the units for automatic units conversion to &lt;a href="https://en.wikipedia.org/wiki/SI_derived_unit"&gt;SI derived units&lt;/a&gt;</help>
			</parameter>
			<parameter key="CSV_UNITS_OFFSET" type="text" size="large">
				<help>Offset to add to each value (including the timestamp) in order to convert it to SI derived units, such as &lt;code&gt;0 0 273.15&lt;/code&gt;. This can also be applied after automatic units conversion (see above) as a way to apply yet another offset.</help>
			</parameter>
			<parameter key="CSV_UNITS_MULTIPLIER" type="text" size="large">
				<help>Factor to multiply each value by (including the timestamp), in order to convert it to SI derived units, such as &lt;code&gt;1 1 0.01&lt;/code&gt;. This can also be applied after automatic units conversion (see above) as a way to apply yet another multiplier.</help>
			</parameter>
		</frame>
		
		<frame caption="Data parsing restrictions" color="#c4c4c4" collapsed="true">
			<parameter key="CSV_COMMENTS_MK" type="text" validate="^.$">
				<help>Single character to use as marker for comments in the input file (default: none). The line is still considered as part of the file, i.e. has to be counted as part of a header.</help>
			</parameter>
			<parameter key="CSV_PURGE_CHARS" type="text" size="large" validate="^(?:\S|(\d{1,3})|(0[xX][0-9a-fA-F]{2}))(?:\s(\S|(\d{1,3})|(0[xX][0-9a-fA-F]{2})))*\s*$">
				<help>Exclude a space delimited list of characters, either directly provided or as decimal representation or as hexadecimal representation prefixed by &lt;i&gt;0x&lt;/i&gt;. Example: &lt;i&gt;0x40 " 13&lt;/i&gt;</help>
			</parameter>
			<parameter key="CSV_EXCLUDE_LINES" type="text" size="large" validate="^(?:\d+(?:\s*\-\s*\d+)?(?:\s*,\s*)?)+$">
				<help>Exclude a comma delimited list of line ranges (line numbers separated by ' - ') such as &lt;i&gt;456 - 468&lt;/i&gt; or individual lines. Please note that it is not possible to mix CSV_EXCLUDE_LINES and CSV_ONLY_LINES, only one type of specification may be provided.</help>
			</parameter>
			<parameter key="CSV_ONLY_LINES" type="text" size="large" validate="^(?:\d+(?:\s*\-\s*\d+)?(?:\s*,\s*)?)+$">
				<help>Restrict the parsing to a comma delimited list of line ranges (line numbers separated by ' - ') such as &lt;i&gt;456 - 468&lt;/i&gt; or individual lines. Please note that it is not possible to mix CSV_EXCLUDE_LINES and CSV_ONLY_LINES, only one type of specification may be provided.</help>
			</parameter>
			<parameter key="CSV_COVERAGE_HINT" type="text" size="large" validate="^([0-9]{4}(?:\-[0-1][0-9](?:\-[0-3][0-9])?)?)(?:\s+\-\s+([0-9]{4}(?:\-[0-1][0-9](?:\-[0-3][0-9])?)?)?)?$">
				<help>A simplified date range (at most daily resolution) fully encompassing the data contained in the file such as &lt;i&gt;2023-10 - 2024&lt;/i&gt; fully encompassing the temporal coverage of the file. This allows MeteoIO to skip files that don't contain data relevant for the date range requested when running.</help>
			</parameter>
		</frame>

		<frame caption="Fields parsing" color="#c4c4c4" collapsed="true">
			<parameter key="CSV_DELIMITER" type="text" default="," size="small">
				<help>Field delimiter character (use &lt;code&gt;SPACE&lt;/code&gt; or &lt;code&gt;TAB&lt;/code&gt; for whitespaces)</help>
			</parameter>
			<parameter key="CSV_NODATA" type="text">
				<help>A space delimited list of strings that should be interpreted as &lt;code&gt;nodata&lt;/code&gt; (for example: NAN NULL -6999)</help>
			</parameter>
			<parameter key="CSV_COLUMNS_HEADERS" type="number" format="integer+" notoggle="true">
				<help>header line number to interpret as columns headers</help>
			</parameter>
			<parameter key="CSV_FIELDS" type="text" size="large">
				<help>Provide a column header (if none is present or to overwrite it) such as &lt;code&gt;DATE TIME ID TA&lt;/code&gt;. See below for special field names related to Date/Time handling or in the &lt;a href="https://meteoio.slf.ch/doc-release/html/csvio.html#csvio_metadata_field_types"&gt;documentation&lt;/a&gt; for more special field names.</help>
			</parameter>
			<parameter key="CSV_FILTER_ID" type="text" size="large">
				<help>if the data contains an "ID" column, which ID should be kept (all others will be rejected); default: station ID</help>
			</parameter>
			<parameter key="CSV_SKIP_FIELDS" type="text" size="large">
				<help>A comma-delimited list of field to skip (first field is numbered 1, ranges are supported such as &lt;i&gt;12 - 17&lt;/i&gt;). Keep in mind that when using parameters such as &lt;code&gt;UNITS_OFFSET&lt;/code&gt;, the skipped field MUST be taken into consideration (since even if a field is skipped, it is still present in the file!)</help>
			</parameter>
			<parameter key="CSV_ONLY_FIELDS" type="text" size="large">
				<help>A comma-delimited list of field to accept while skipping all others (first field is numbered 1, ranges are supported such as &lt;i&gt;12 - 17&lt;/i&gt;). Keep in mind that when using parameters such as &lt;code&gt;UNITS_OFFSET&lt;/code&gt;, the skipped field MUST be taken into consideration (since even if a field is skipped, it is still present in the file!)</help>
			</parameter>
			<parameter key="CSV_NUMBER_FIELDS" type="alternative">
				<option value="TRUE"/>
				<option value="FALSE"/>
				<help>If set to true, prefix every given field name by its column index in the original file (this is useful to "debug" CSV files when the columns' content don't match what was expected); optional</help>
			</parameter>
			<parameter key="CSV_FIELDS_POSTFIX" type="text">
				<help>Postfix every given field name by the provided string (this is also to "debug" CSV files); optional</help>
			</parameter>
		</frame>

		<frame caption="Date/Time handling" color="#c4c4c4" collapsed="true">
			<parameter type="helptext" wrap="true">
				<help>There are many, many ways to represent date and time:
					&lt;ul&gt;
						&lt;li&gt;a single string that will be parsed as one &lt;b&gt;combined&lt;/b&gt; date+time timestamp&lt;/li&gt;
						&lt;li&gt;or &lt;b&gt;split&lt;/b&gt; as separate strings for the date and time fields&lt;/li&gt;
						&lt;li&gt;or separate fields for each date and time &lt;b&gt;components&lt;/b&gt; (such as year, month, ...)&lt;/li&gt;
						&lt;li&gt;or as a &lt;b&gt;decimal&lt;/b&gt; value based on some date and time representation.&lt;/li&gt;
					&lt;/ul&gt;
					Do not forget to include any delimiting characters such as " or ' in the specification of the timestamp representation or purge them with CSV_PURGE_CHARS.
				</help>
			</parameter>
			<parameter key="CSV_TIMESTAMP" type="alternative">
				<option value="COMBINED">
					<parameter key="CSV_DATETIME_SPEC" type="text" optional="false">
						<help>Mixed date and time format specification, such as &lt;code&gt;YYYY-MM-DDTHH24:MI:SS&lt;/code&gt; (see the &lt;a href="https://meteoio.slf.ch/doc-dev/html/csvio.html#csvio_date_specs"&gt;documentation&lt;/a&gt;)</help>
					</parameter>
					<help>A single string contains a combined date+time timestamp (the field must be named DATETIME or TIMESTAMP)</help>
				</option>
				<option value="SPLIT">
					<parameter key="CSV_DATE_SPEC" type="text" optional="false">
						<help>Date format specification, such as &lt;code&gt;YYYY-MM-DD&lt;/code&gt; (see the &lt;a href="https://meteoio.slf.ch/doc-dev/html/csvio.html#csvio_date_specs"&gt;documentation&lt;/a&gt;)</help>
					</parameter>
					<parameter key="CSV_TIME_SPEC" type="text" optional="false">
						<help>Time format specification, such as &lt;code&gt;HH24:MI:SS&lt;/code&gt;</help>
					</parameter>
					<help>The date and the time have each their own seperate string (the fields must be named DATE and TIME)</help>
				</option>
				<option value="COMPONENTS">
					<parameter key="CSV_FALLBACK_YEAR" type="number" format="integer+" notoggle="true">
						<help>When using components date (ie separate columns for year, month, day), it could be that there is no year column. This parameter provides the (fixed) year to use</help>
					</parameter>
					<parameter key="CSV_FALLBACK_AUTO_WRAP" type="alternative">
						<option value="TRUE"/>
						<option value="FALSE"/>
						<help>If using CSV_FALLBACK_YEAR, by default all data at dates greater than 1st October that appear before data at dates less than 1st October are assumed to belong to the year before. If this is not desired, set this to false.</help>
					</parameter>
					<parameter key="CSV_FALLBACK_TIME" type="number" format="integer+" notoggle="true">
						<help>When using components date, it could be that there is no time column. This parameter provides the (fixed) hour to use (minutes and seconds are assumed to be 0)</help>
					</parameter>
					<parameter key="CSV_DATE_SPEC" type="text" optional="true">
						<help>Date format specification, such as &lt;code&gt;YYYY-MM-DD&lt;/code&gt; (see the &lt;a href="https://meteoio.slf.ch/doc-dev/html/csvio.html#csvio_date_specs"&gt;documentation&lt;/a&gt;)</help>
					</parameter>
					<parameter key="CSV_TIME_SPEC" type="text" optional="true">
						<help>Time format specification, such as &lt;code&gt;HH24:MI:SS&lt;/code&gt;</help>
					</parameter>
					<help>Each components of the date and time have their own field and representation. The following fields names are supported (either from the headers or through the CSV_FIELDS key): DATE (to be parsed as string based on CSV_DATE_SPEC), YEAR, YEAR_2DIGITS, JDAY (number of days since the begining of the year), MONTH, DAY, TIME (to be parsed as string based on CSV_TIME_SPEC), NTIME (numerical representation of time, for example 952 for 09:52), HOURS, MINUTES, SECONDS (if minutes or seconds are missing, they will be assumed to be zero)</help>
				</option>
				<option value="DECIMAL">
					<parameter key="CSV_DECIMALDATE_TYPE" type="alternative" optional="false">
						<option value="EXCEL"/>
						<option value="MATLAB"/>
						<option value="RFC868"/>
						<option value="UNIX"/>
						<option value="JULIAN"/>
						<option value="MJULIAN"/>
						<option value="TJULIAN"/>
					</parameter>
					<help>Pure numerical (combined) date and time representation</help>
				</option>
				<help>Date and time representation</help>
			</parameter>
		</frame>
	</parametergroup>

	<parametergroup name="CSV_NUMBERED_METEOFILE">
		<frame caption="Provide station specific settings" collapsed="true">
			<parameter key="CSV#_DELIMITER" type="text" size="small">
				<help>Field delimiter character</help>
			</parameter>
			<parameter key="CSV#_NODATA" type="text">
				<help>A space delimited list of strings that should be interpreted as &lt;code&gt;nodata&lt;/code&gt; (for example: NAN NULL -6999)</help>
			</parameter>
			<frame caption="Metadata" color="#c4c4c4" collapsed="true">
				<parameter key="CSV#_NAME" type="text">
					<help>A descriptive station name to use (if provided, has priority over the special headers). Example: "Davos::SLF-station"</help>
				</parameter>
				<parameter key="CSV#_ID" type="text">
					<help>The (short) station ID to use (if provided, has priority over the special headers). The station ID is often used to built the output file name as well as to apply specific processing at specific stations, if necessary. Example: "SLF2"</help>
				</parameter>
				<parameter key="CSV#_SLOPE" type="number" format="integer+" min="0" max="90">
					<help>The slope angle at the station, in degrees (if providing a slope, also provide an azimuth)</help>
				</parameter>
				<parameter key="CSV#_AZIMUTH" type="number" format="integer+" min="0" max="360">
					<help>The slope azimuth at the station, in degrees from North </help>
				</parameter>
				<parameter key="POSITION#" type="text" validate="coordinates">
					<help>Coordinates are given as lat/lon/alt or easting/northing/alt such as &lt;b&gt;&lt;i&gt;latlon (46.75, 9.80, 2200)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;latlon (46d 48' 44.553", 9d 50' 50.694", 1550)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;xy(198754, 723458, 2200) [N,E,Alt]&lt;/i&gt;&lt;/b&gt;</help>
				</parameter>
				<parameter key="CSV#_SPECIAL_HEADERS" type="text">
					<help>Description of how to extract more metadata out of the headers, such as &lt;code&gt;name:1:3 id:2:5 lat:3:2 lon:3:4 alt:3:6&lt;/code&gt;</help>
				</parameter>
				<parameter key="CSV#_FILENAME_SPEC" type="text">
					<help>Pattern to parse the filename and extract metadata out of it, such as &lt;code&gt;{ID}_{NAME}-{SKIP}_-_{PARAM}&lt;/code&gt;</help>
				</parameter>
			</frame>
			<frame caption="Header handling" color="#c4c4c4" collapsed="true">
				<parameter key="CSV#_NR_HEADERS" type="number" format="integer+" min="0" notoggle="true">
					<help>Number of header lines</help>
				</parameter>
				<parameter key="CSV#_HEADER_DELIMITER" type="text" default="" size="small">
					<help>different field delimiter to use in header lines</help>
				</parameter>
				<parameter key="CSV#_HEADER_REPEAT_MK" type="text" size="large">
					<help>A string that is used to signal another copy of the headers mixed with the data in the file (the matching is done anywhere in the line)</help>
				</parameter>
				<parameter key="CSV#_UNITS_HEADERS" type="number" format="integer+" notoggle="true">
					<help>Header line providing the measurements units</help>
				</parameter>
				<parameter key="CSV#_UNITS_OFFSET" type="text" size="large">
					<help>Offset to add to each value in order to convert it to SI, such as &lt;code&gt;0 0 273.15&lt;/code&gt;</help>
				</parameter>
				<parameter key="CSV#_UNITS_MULTIPLIER" type="text" size="large">
					<help>Factor to multiply each value by, in order to convert it to SI, such as &lt;code&gt;1 1 0.01&lt;/code&gt;</help>
				</parameter>
				<parameter key="CSV#_UNITS" type="text" size="large">
					<help>Space delimited list of units to use for the columns (including the timestamp). No units is represented by "-". This can not be used together with units_offset / units multiplier</help>
				</parameter>
			</frame>
			<frame caption="Data parsing restrictions" color="#c4c4c4" collapsed="true">
				<parameter key="CSV#_COMMENTS_MK" type="text" validate="^.$">
					<help>Single character to use as marker for comments in the input file (default: none)</help>
				</parameter>
				<parameter key="CSV#_PURGE_CHARS" type="text" size="large" validate="^(?:\S|(\d{1,3})|(0[xX][0-9a-fA-F]{2}))(?:\s(\S|(\d{1,3})|(0[xX][0-9a-fA-F]{2})))*\s*$">
					<help>Exclude a space delimited list of characters, either directly provided or as decimal representation or as hexadecimal representation prefixed by &lt;i&gt;0x&lt;/i&gt;. Example: &lt;i&gt;0x40 " 13&lt;/i&gt;</help>
				</parameter>
				<parameter key="CSV#_EXCLUDE_LINES" type="text" size="large" validate="^(?:\d+(?:\s*\-\s*\d+)?(?:\s*,\s*)?)+$">
					<help>Exclude a comma delimited list of line ranges (line numbers separated by ' - ') such as &lt;i&gt;456 - 468&lt;/i&gt; or individual lines. Please note that it is not possible to mix CSV_EXCLUDE_LINES and CSV_ONLY_LINES, only one type of specification may be provided.</help>
				</parameter>
				<parameter key="CSV#_ONLY_LINES" type="text" size="large" validate="^(?:\d+(?:\s*\-\s*\d+)?(?:\s*,\s*)?)+$">
					<help>Restrict the parsing to a comma delimited list of line ranges (line numbers separated by ' - ') such as &lt;i&gt;456 - 468&lt;/i&gt; or individual lines. Please note that it is not possible to mix CSV_EXCLUDE_LINES and CSV_ONLY_LINES, only one type of specification may be provided.</help>
				</parameter>
				<parameter key="CSV#_COVERAGE_HINT" type="text" size="large" validate="^([0-9]{4}(?:\-[0-1][0-9](?:\-[0-3][0-9])?)?)(?:\s+\-\s+([0-9]{4}(?:\-[0-1][0-9](?:\-[0-3][0-9])?)?)?)?$">
					<help>A simplified date range (at most daily resolution) fully encompassing the data contained in the file such as &lt;i&gt;2023-10 - 2024&lt;/i&gt; fully encompassing the temporal coverage of the file. This allows MeteoIO to skip files that don't contain data relevant for the date range requested when running.</help>
				</parameter>
			</frame>
			<frame caption="Fields parsing" color="#c4c4c4" collapsed="true">
				<parameter key="CSV#_COLUMNS_HEADERS" type="number" format="integer+" notoggle="true">
					<help>header line number to interpret as columns headers</help>
				</parameter>
				<parameter key="CSV#_FIELDS" type="text" size="large">
					<help>Provide a column header (if none is present or to overwrite it) such as &lt;code&gt;DATE TIME ID TA&lt;/code&gt;. See in the &lt;a href="https://meteoio.slf.ch/doc-release/html/csvio.html#csvio_metadata_field_types"&gt;documentation&lt;/a&gt; for details.</help>
				</parameter>
				<parameter key="CSV#_FILTER_ID" type="text" size="large">
					<help>if the data contains an "ID" column, which ID should be kept (all others will be rejected); default: station ID</help>
				</parameter>
				<parameter key="CSV#_SKIP_FIELDS" type="text" size="large">
					<help>A comma-delimited list of field to skip (first field is numbered 1, ranges are supported such as &lt;i&gt;12 - 17&lt;/i&gt;). Keep in mind that when using parameters such as &lt;code&gt;UNITS_OFFSET&lt;/code&gt;, the skipped field MUST be taken into consideration (since even if a field is skipped, it is still present in the file!)</help>
				</parameter>
				<parameter key="CSV#_ONLY_FIELDS" type="text" size="large">
					<help>A comma-delimited list of field to accept while skipping all others (first field is numbered 1, ranges are supported such as &lt;i&gt;12 - 17&lt;/i&gt;). Keep in mind that when using parameters such as &lt;code&gt;UNITS_OFFSET&lt;/code&gt;, the skipped field MUST be taken into consideration (since even if a field is skipped, it is still present in the file!)</help>
				</parameter>
				<parameter key="CSV#_NUMBER_FIELDS" type="alternative">
					<option value="TRUE"/>
					<option value="FALSE"/>
					<help>If set to true, prefix every given field name by its column index in the original file (this is useful to "debug" CSV files when the columns' content don't match what was expected); optional</help>
				</parameter>
				<parameter key="CSV#_FIELDS_POSTFIX" type="text">
					<help>Postfix every given field name by the provided string (this is also to "debug" CSV files); optional</help>
				</parameter>
			</frame>
			<frame caption="Date/Time handling" color="#c4c4c4" collapsed="true">
				<parameter key="CSV#_TIMESTAMP" type="alternative">
					<option value="COMBINED">
						<parameter key="CSV#_DATETIME_SPEC" type="text" optional="false">
							<help>Mixed date and time format specification, such as &lt;code&gt;YYYY-MM-DDTHH24:MI:SS&lt;/code&gt;</help>
						</parameter>
						<help>A single string contains a combined date+time timestamp (the field must be named DATETIME or TIMESTAMP)</help>
					</option>
					<option value="SPLIT">
						<parameter key="CSV#_DATE_SPEC" type="text" optional="false">
							<help>Date format specification, such as &lt;code&gt;YYYY-MM-DD&lt;/code&gt;</help>
						</parameter>
						<parameter key="CSV#_TIME_SPEC" type="text" optional="false">
							<help>Time format specification, such as &lt;code&gt;HH24:MI:SS&lt;/code&gt;</help>
						</parameter>
						<help>The date and the time have each their own seperate string (the fields must be named DATE and TIME)</help>
					</option>
					<option value="COMPONENTS">
						<parameter key="CSV#_FALLBACK_YEAR" type="number" format="integer+" notoggle="true">
							<help>When using components date (ie separate columns for year, month, day), it could be that there is no year column. This parameter provides the (fixed) year to use</help>
						</parameter>
						<parameter key="CSV#_FALLBACK_AUTO_WRAP" type="alternative">
							<option value="true"/>
							<option value="false"/>
							<help>If using CSV_FALLBACK_YEAR, by default all data at dates greater than 1st October that appear before data at dates less than 1st October are assumed to belong to the year before. If this is not desired, set this to false.</help>
						</parameter>
						<parameter key="CSV#_FALLBACK_TIME" type="number" format="integer+" notoggle="true">
							<help>When using components date, it could be that there is no time column. This parameter provides the (fixed) hour to use (minutes and seconds are assumed to be 0)</help>
						</parameter>
						<parameter key="CSV#_DATE_SPEC" type="text" optional="true">
							<help>Date format specification, such as &lt;code&gt;YYYY-MM-DD&lt;/code&gt; (see the &lt;a href="https://meteoio.slf.ch/doc-dev/html/csvio.html#csvio_date_specs"&gt;documentation&lt;/a&gt;)</help>
						</parameter>
						<parameter key="CSV#_TIME_SPEC" type="text" optional="true">
							<help>Time format specification, such as &lt;code&gt;HH24:MI:SS&lt;/code&gt;</help>
						</parameter>
						<help>Each components of the date and time have their own field and representation. The following fields names are supported (either from the headers or through the CSV_FIELDS key): DATE (to be parsed as string based on CSV_DATE_SPEC), YEAR, YEAR_2DIGITS, JDAY (number of days since the begining of the year), MONTH, DAY, TIME (to be parsed as string based on CSV_TIME_SPEC), NTIME (numerical representation of time, for example 952 for 09:52), HOURS, MINUTES, SECONDS (if minutes or seconds are missing, they will be assumed to be zero)</help>
					</option>
					<option value="DECIMAL">
						<parameter key="CSV_DECIMALDATE_TYPE" type="alternative" optional="false">
							<option value="EXCEL"/>
							<option value="MATLAB"/>
							<option value="RFC868"/>
							<option value="UNIX"/>
							<option value="JULIAN"/>
							<option value="MJULIAN"/>
							<option value="TJULIAN"/>
						</parameter>
						<help>Pure numerical (combined) date and time representation</help>
					</option>
					<help>Date and time representation</help>
				</parameter>
			</frame>
		</frame>
	</parametergroup>

	<!-- BUFR -->
	<parametergroup name="BUFR_IN">
		<parameter key="METEOPATH" type="path" optional="false">
			<help>directory where to read the data files from</help>
		</parameter>
		<parameter key="STATION#" type="filename" path="%INPUT::METEOPATH" mode="input" replicate="true" optional="true">
			<option extension="BUFR file (*.*)"/>
			<help>File name for station number #</help>
		</parameter>
		<parameter key="BUFREXT" type="text" optional="true">
			<help>extension of BUFR data files to use when no Station filenames have been provided (default: .bufr)</help>
		</parameter>
		<parameter key="ADDITIONAL_PARAMS" type="text" optional="true" size="large">
			<help>Additional Params, that are not specified in WMO table 40 on BUFR. (BUFR keys seperated by whitespaces) </help>
		</parameter>
		<parameter key="FALLBACKTZ" type="number" optional="true">
			<help>Timezone to use when the timezone is not specified in the BUFR file (default: 0)</help>
		</parameter>
		<parameter key="VERBOSE" type="alternative" optional="true">
			<option value="TRUE"/>
			<option value="FALSE"/>
			<help>should extra (ie very verbose) information be displayed?</help>
		</parameter>
	</parametergroup>
	
	<!-- DBO -->
	<parametergroup name="DBO_IN">
		<parameter type="helptext" wrap="true">
			<help>The station IDs usually contain the network the station belongs to as well as its ID, separated by "::". For example, the IMIS station SLF2 has to be retrieved as &lt;i&gt;IMIS::SLF2&lt;/i&gt;. By default, if no network information is provided, the network is assumed to be IMIS, so the previous example station can simply be retrieved as &lt;i&gt;SLF2&lt;/i&gt;. Please note that there is a &lt;a href="https://map.geo.admin.ch/?zoom=5&amp;lang=en&amp;topic=ech&amp;bgLayer=ch.swisstopo.pixelkarte-farbe&amp;layers=KML%7C%7Chttps:%2F%2Fstationdocu.slf.ch%2Fkml%2Fnetwork-map.kml&amp;E=2782095.39&amp;N=1179586.56"&gt;map of available stations&lt;/a&gt; that you can use to retrieve the station IDs and networks that you want to use (the ID and network information are shown in a popup window after clicking on the station's markers)</help>
		</parameter>
		<reference name="STATIONGROUP_NAMES"/>
		<frame caption="Advanced options" collapsed="true">
			<parameter key="DBO_URL" type="text" size="large" optional="true">
				<help>RESTful service URL (default: https://pgdata.int.slf.ch)</help>
			</parameter>
			<parameter key="DBO_PROXY" type="text" size="large" optional="true">
				<help>The URL of a &lt;A HREF="https://linuxize.com/post/how-to-setup-ssh-socks-tunnel-for-private-browsing/"&gt;SOCKS5 proy&lt;/A&gt; for the connection to go through (optional, specified as {host}:{port} such as *localhost:8080*)</help>
			</parameter>
			<parameter key="DBO_TIMEOUT" type="number" format="integer+" unit="s" optional="true">
				<help>timeout for the connection to the server (default: 60s)</help>
			</parameter>
			<parameter key="DBO_DEBUG" type="alternative">
				<option value="TRUE"/>
				<option value="FALSE"/>
				<help>print the full requests/answers from the server when something does not work as expected</help>
			</parameter>
		</frame>
	</parametergroup>

	<!-- GEOTOP -->
	<parametergroup name="GEOTOP_IN">
		<parameter key="METEOPATH" type="path" optional="false">
			<help>Path to the data files</help>
		</parameter>
		<parameter key="METEOPREFIX" type="text">
			<help>prefix to append when generating a file name for reading</help>
		</parameter>
		<parameter key="METAFILE" type="file" mode="input" optional="false">
			<help>Absolute filename of the geotop.inpts file</help>
		</parameter>
	</parametergroup>

	<!-- GOES -->
	<parametergroup name="GOES_IN">
		<parameter key="METEOPATH" type="path" optional="false">
			<help>directory where to read the data files from</help>
		</parameter>
		<parameter key="GOES_EXT" type="text" size="small">
			<help>extension of Goes data files to use when no FILE# keyword has been provided</help>
		</parameter>
		<parameter key="METEOPATH_RECURSIVE" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>when no METEOFILE# keyword has been defined, should all files under METEOPATH be searched recursively?</help>
		</parameter>
		<reference name="FILESGROUP"/>
		<parameter key="METAFILE" type="file" mode="input" optional="false">
			<help>an ini file that contains all the metadata, for each station that has to be read</help>
		</parameter>
		<parameter key="GOES_NODATA" type="number" format="integer" default="-8190" optional="false" notoggle="true">
			<help>value used to represent nodata</help>
		</parameter>
		<parameter key="GOES_ONLYFROMPAST" type="alternative" default="true">
			<option value="true"/>
			<option value="false"/>
			<help>if set to true, data point beyond the current date and time will be rejected as invalid</help>
		</parameter>
		<parameter key="GOES_DEBUG" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>should extra (ie very verbose) information be displayed?</help>
		</parameter>
	</parametergroup>

	<!-- GRIB -->
	<parametergroup name="GRIB_METEO_IN">
		<parameter key="METEOPATH" type="path" optional="false">
			<help>Path to the grib files</help>
		</parameter>
		<parameter key="METEOPATTERN" type="text">
			<help>A pattern, by which meteo files should be distinguished in directory. (When using Grib for Grid2d as well, either pattern or extension need to be different) </help>
		</parameter>
		<parameter key="METEODEXT" type="text">
			<help>Grib file extension, or none for no file extension, used to search for meteo files (default: .grib) (When using Grib for Grid2D as well, either extension or pattern needs to be different)</help>
		</parameter>
		<parameter key="STATION#" type="text" replicate="true" optional="false" validate="coordinates">
			<help>Coordinates are given as lat/lon/alt or easting/northing/alt such as &lt;b&gt;&lt;i&gt;latlon (46.75, 9.80, -1)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;latlon (46d 48' 44.553", 9d 50' 50.694", -1)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;xy (198754, 723458, -1)&lt;/i&gt;&lt;/b&gt;. In this plugin, the &lt;b&gt;altitudes will be replaced&lt;/b&gt; by the ones coming from the DEM, so feel free to put &lt;i&gt;-1&lt;/i&gt; instead!</help>
		</parameter>
		<parameter key="GRIB_TABLE" type="file" mode="input" optional="true">
			<help>GRIB parameter table file, if using GRIB for GRID2D and DEM reading as well, the same Grib Table will be used. (default: docs/resources/GRIB_param.tbl)</help>
		</parameter>
		<parameter key="VERBOSE" type="alternative">
			<option value="TRUE"/>
			<option value="FALSE"/>
			<help>print some low level details about the file being read</help>
		</parameter>
		<parameter key="RECURSIVE" type="alternative">
			<option value="TRUE"/>
			<option value="FALSE"/>
			<help>search for files recursively in the directory</help>
		</parameter>
	</parametergroup>

	<!-- iCSV -->
	<parametergroup name="iCSV_IN">
		<parameter key="METEOPATH" type="path" mode="input" optional="false">
			<help>Directory of your iCSV data files</help>
		</parameter>
		<parameter key="METEOPATH_RECURSIVE" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>If set to true, files are recursively searched within &lt;a href=&quot;app://input::meteopath&quot;&gt;METEOPATH&lt;/a&gt; (default: false)</help>
		</parameter>
		<!--<reference name="STATIONGROUP_FILES_OPTIONAL"/>-->
		<parameter key="METEOFILE#" type="filename" path="%INPUT::METEOPATH" mode="input" replicate="true">
			<option extension="iCSV files (*.icsv *.ICSV)"/>
			<option extension="All files (*.*)"/>
			<help>File name for meteo file number #</help>
		</parameter>
		<parameter key="SNOWPACK_SLOPES" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>if set to true and no slope information is found in the input files, the IMIS/Snowpack naming scheme will be used to derive the slope information (default: false)</help>
		</parameter>
	</parametergroup>

	<!-- IMIS -->
	<parametergroup name="IMIS_IN">
		<parameter key="DBNAME" type="text" optional="false">
			<help>Database name, either as //hostname:port/service_name (exemple: //sdbo.wd.op:1521/sdbo.slf.ch) or as a symbolic name as defined in the tnsnames.ora Network Configuration File provided by the Database administrator.</help>
		</parameter>
		<parameter key="DBUSER" type="text" optional="false">
			<help>Database user name</help>
		</parameter>
		<parameter key="DBPASS" type="text" optional="false">
			<help>Database password associated with the user name</help>
		</parameter>
		<reference name="STATIONGROUP_NAMES"/>
		<parameter key="USEANETZ" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>OPTIONAL: use ANETZ stations to provide precipitations for normal IMIS stations.
				Each IMIS station is associated with one or two ANETZ stations and does a weighted
				average to get what should be its local precipitations (default: false)</help>
		</parameter>
		<parameter key="USE_IMIS_PSUM" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>OPTIONAL: if set to false (default), all IMIS precipitation will be deleted (since IMIS stations don't have heated rain gauges, their precipitation measurements are not good in winter conditions). If set to true, it is strongly advised to use a UNHEATED_RAINGAUGE filter to detect snow melting in the rain gauge and perform winter conditions detection in the application (default: false).</help>
		</parameter>
		<parameter key="USE_SNOWPACK_PSUM" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>if set to true, the SNOWPACK simulated Snow Water Equivalent from the database will be used to compute PSUM. Data gaps greater than 3 hours on SWE will lead to unchanged hnw while all data that can properly be computed will overwrite hnw. (default=false)</help>
		</parameter>
	</parametergroup>
	
	<!-- METEOBLUE -->
	<parametergroup name="METEOBLUE_IN">
		<parameter key="METEOBLUE_URL" type="text" optional="true">
			<help>RESTful service URL (default: http://my.meteoblue.com/)</help>
		</parameter>
		<parameter key="METEOBLUE_APIKEY" type="text" optional="false">
			<help>the key purchased from Meteoblue that gives access to its API (mandatory)</help>
		</parameter>
		<parameter key="METEOBLUE_PACKAGES" type="text" size="large" optional="false">
			<help>a space delimited list of &lt;a href="https://docs.meteoblue.com/en/weather-apis/packages-api/forecast-data"&gt;packages&lt;/a&gt; to read data from. Please note that you must have purchased an API key that gives access to all the packages that you list here!</help>
		</parameter>
		<parameter key="METEOBLUE_TIMEOUT" type="number" format="integer+" optional="true">
			<help>timeout (in seconds) for the connection to the server (default: 60s)</help>
		</parameter>
		<parameter key="METEOBLUE_DEBUG" type="alternative" optional="true">
			<option value="true"/>
			<option value="false"/>
			<help>print more information in order to better understand when something does not work as expected</help>
		</parameter>
		<parameter key="STATION#" type="grid" replicate="true">
			<option>
				<parameter key="STATION#" type="text" validate="coordinates" optional="false">
					<help>Coordinates are given as lat/lon/alt or easting/northing/alt such as &lt;b&gt;&lt;i&gt;latlon (46.75, 9.80, 2200)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;latlon (46d 48' 44.553", 9d 50' 50.694", 1550)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;xy (198754, 723458, 2200)&lt;/i&gt;&lt;/b&gt;</help>
				</parameter>
			</option>
			<option>
				<parameter key="STATION#_NAME" type="text" optional="true">
					<help>A descriptive station name to use. Example: "Davos::SLF-station" (default: STATION_#)</help>
				</parameter>
			</option>
			<option>
				<parameter key="STATION#_ID" type="text" optional="true">
					<help>The (short) station ID to use. It is recommended to define an ID as this will be used to apply data generators, filters, etc (default: ID_#)</help>
				</parameter>
			</option>
			<help>Enter the generated station's coordinates and optionaly ids and names</help>
		</parameter>
	</parametergroup>
	
	<!-- MYSQL -->
	<parametergroup name="MYSQL_IN">
		<parameter key="MYSQL_HOST" type="text" optional="false">
			<help>Database host name, as provided by your database administrator</help>
		</parameter>
		<parameter key="MYSQL_DB" type="text" optional="false">
			<help>Database name, as provided by your database administrator</help>
		</parameter>
		<parameter key="MYSQL_USER" type="text" optional="false">
			<help>Database user name</help>
		</parameter>
		<parameter key="MYSQL_PASS" type="text" optional="false">
			<help>Database password associated with the user name</help>
		</parameter>
		<parameter key="MYSQL_SCHEMA" type="alternative" optional="false">
			<option value="WWCS"/>
			<help>data schema to use</help>
		</parameter>
		<reference name="STATIONGROUP_NAMES"/>
	</parametergroup>

	<!-- NETCDF -->
	<parametergroup name="NETCDF_IN">
		<parameter key="METEOPATH" type="path" optional="false">
			<help>Path to the data files</help>
		</parameter>
		<parameter key="NC_EXT" type="text" default=".nc" size="small">
			<help>NetCDF file extension (for example: .nc)</help>
		</parameter>
		<reference name="FILESGROUP_OPTIONAL"/>
		<parameter key="METEOPATH_RECURSIVE" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>when no METEOFILE# keyword has been defined, should all files under METEOPATH be searched recursively? (default: false)</help>
		</parameter>
		<parameter key="NETCDF_SCHEMA_METEO" type="alternative" default="CF-1.6">
			<option value="CF-1.6"/>
			<option value="CROCUS"/>
			<option value="AMUNDSEN"/>
			<option value="ERA-INTERIM"/>
			<option value="ERA5"/>
			<option value="WRF"/>
			<help>Data schema to use (i. e. mostly variables and dimensions naming)</help>
		</parameter>
		<parameter label="Remap variables:" type="selector">
			<parameter key="NETCDF_VAR::%" type="text" template="true">
				<help>parameter name as found in the current NetCDF file</help>
			</parameter>
			<reference name="METEOGRIDS"/>
			<help>remap the names as found in the NetCDF file to MeteoIO's &lt;a href=https://meteoio.slf.ch/doc-release/html/classmio_1_1MeteoGrids.html#a2063b187182804ab133b154b65ae592c"&gt;MeteoGrids::parameters&lt;/a&gt;</help>
		</parameter>
		<parameter label="Remap dimensions:" type="selector">
			<parameter key="NETCDF_DIM::%" type="text" template="true">
				<help>dimension name as found in the current NetCDF file</help>
			</parameter>
			<reference name="METEOGRIDS"/>
			<help>remap the names as found in the NetCDF file to MeteoIO's &lt;a href=https://meteoio.slf.ch/doc-release/html/classmio_1_1MeteoGrids.html#a2063b187182804ab133b154b65ae592c"&gt;MeteoGrids::parameters&lt;/a&gt;</help>
		</parameter>
		<parameter key="NC_KEEP_FILES_OPEN" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>keep files open for efficient access? Beware, there is a max number of simultaneously opened files (default: true)</help>
		</parameter>
		<parameter key="NC_DEBUG" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>print some low level details about the file being read</help>
		</parameter>
		<parameter key="NC_ALLOW_MISSING_COORDS" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>for files containing timeseries without any STATION dimension, accept files that do not contain the geolocalization of the measurements (please then use a data creator to provide the geolocalization, otherwise you can expect a mess at some point. Default: false)</help>
		</parameter>
	</parametergroup>

	<!-- OSHD -->
	<parametergroup name="OSHD_METEO_IN">
		<parameter key="METEOPATH" type="path" optional="false">
			<help>Path to the data files</help>
		</parameter>
		<parameter key="METEOPATH_RECURSIVE" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>If set to true, files are recursively searched within &lt;a href=&quot;app://input::meteopath&quot;&gt;METEOPATH&lt;/a&gt; (default: false)</help>
		</parameter>
		<reference name="STATIONGROUP_NAMES"/>
		<parameter key="METAFILE" type="file" mode="input" optional="false">
			<help>Absolute filename of the metadata file</help>
		</parameter>
		<parameter key="OSHD_DEBUG" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>write out extra information to better show what is in the files</help>
		</parameter>
	</parametergroup>

	<!-- PSQL -->
	<parametergroup name="PSQL_IN">
		<parameter key="PSQL_URL" type="text" optional="false">
			<help>Database URL</help>
		</parameter>
		<parameter key="PSQL_PORT" type="text" validate="[0-9]+" size="small">
			<help>Database port to use for connection</help>
		</parameter>
		<parameter key="PSQL_DB" type="text" optional="false">
			<help>Database name</help>
		</parameter>
		<parameter key="PSQL_USER" type="text" optional="false"/>
		<parameter key="PSQL_PASS" type="text" optional="false"/>
		<parameter key="SQL_META" type="text" optional="false">
			<help>Query to retrieve the metadata. For example, &lt;code&gt;SELECT id, station_name AS name, x_coord AS x, y_coord AS y, z AS altitude, epsg from all_stations WHERE id IN&lt;/code&gt;
			</help>
		</parameter>
		<parameter key="SQL_DATA" type="text" optional="false">
			<help>Query to retrieve the data. For example, &lt;code&gt;SELECT * FROM all_measurements WHERE id = ''STATIONID'' AND date&gt;=''DATE_START'' AND date&lt;=''DATE_END'' ORDER BY date&lt;/code&gt;
			</help>
		</parameter>
		<parameter key="STATIONS" type="text" optional="false">
			<help>Comma-separated list of station IDs to use</help>
		</parameter>
	</parametergroup>

	<!-- SASE -->
	<parametergroup name="SASE_IN">
		<parameter key="SASE_HOST" type="text" optional="false">
			<help>Database host name, as provided by your database administrator</help>
		</parameter>
		<parameter key="SASE_DB" type="text" optional="false">
			<help>Database name, as provided by your database administrator</help>
		</parameter>
		<parameter key="SASE_USER" type="text" optional="false">
			<help>Database user name</help>
		</parameter>
		<parameter key="SASE_PASS" type="text" optional="false">
			<help>Database password associated with the user name</help>
		</parameter>
		<reference name="STATIONGROUP_NAMES"/>
	</parametergroup>

	<!-- SMET -->
	<parametergroup name="SMET_IN">
		<parameter key="METEOPATH" type="path" mode="input" optional="false">
			<help>Directory of your SMET data files</help>
		</parameter>
		<parameter key="METEOPATH_RECURSIVE" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>If set to true, files are recursively searched within &lt;a href=&quot;app://input::meteopath&quot;&gt;METEOPATH&lt;/a&gt; (default: false)</help>
		</parameter>
		<!--<reference name="METEOFILEGROUP_FILES_OPTIONAL"/>-->
		<parameter key="METEOFILE#" type="filename" path="%INPUT::METEOPATH" mode="input" replicate="true">
			<option extension="SMET files (*.smet *.SMET)"/>
			<option extension="All files (*.*)"/>
			<help>File name for meteofile number #</help>
		</parameter>
		<parameter key="SNOWPACK_SLOPES" type="alternative">
			<option value="true"/>
			<option value="false"/>
			<help>if set to true and no slope information is found in the input files, the IMIS/Snowpack naming scheme will be used to derive the slope information (default: false)</help>
		</parameter>
	</parametergroup>

	<!-- SNOWPACK -->
	<parametergroup name="SNOWPACK_IN">
		<parameter key="METEOPATH" type="path" mode="input" optional="false">
			<help>Path to the SNOWPACK files</help>
		</parameter>
		<reference name="STATIONGROUP_FILES"/>
		<parameter key="METAFILE" type="filename" mode="input" optional="false">
			<help>filename of the meta data file (in METEOPATH)</help>
		</parameter>
		<parameter key="NUMBER_MEAS_TEMPERATURES" type="number" format="integer" min="0" default="0" optional="false" notoggle="true">
			<help>Number of measured snow temperatures that are provided</help>
		</parameter>
		<parameter key="NUMBER_OF_SOLUTES" type="number" format="integer+" default="0" optional="false" notoggle="true">
			<help>Number of solutes for which input data are provided</help>
		</parameter>
		<parameter key="RSWR_INP" type="alternative" optional="false">
			<option value="true"/>
			<option value="false"/>
		</parameter>
		<parameter key="ISWR_INP" type="alternative" optional="false">
			<option value="true"/>
			<option value="false"/>
		</parameter>
		<parameter key="VW_DRIFT" type="alternative" default="false">
			<option value="true"/>
			<option value="false"/>
			<help>OPTIONAL: wind velocity to use for blowing and drifting snow is provided</help>
		</parameter>
		<parameter key="RHO_HN" type="alternative" default="false">
			<option value="true"/>
			<option value="false"/>
			<help>OPTIONAL: measured new snow density is provided</help>
		</parameter>
	</parametergroup>
	
	<!-- SYNTH -->
	<parametergroup name="SYNTH">
		<parameter key="SYNTH_START" type="datetime" optional="true">
			<help>Timestamps generation starts at SYNTH_START (default: always generate)</help>
		</parameter>
		<parameter key="SYNTH_END" type="datetime" optional="true">
			<help>Timestamps generation stops at SYNTH_END (default: always generate)</help>
		</parameter>
		<parameter key="SYNTH_SAMPLING" type="number" format="decimal" unit="s" optional="false">
			<help>Sampling rate of the generated timestamps (in seconds)</help>
		</parameter>
		<parameter key="STATION#" type="grid" replicate="true"> <!-- a grid without raster positions aligns vertically -->
			<option>
				<parameter key="STATION#" type="text" validate="coordinates" optional="false">
					<help>Coordinates are given as lat/lon/alt or easting/northing/alt such as &lt;b&gt;&lt;i&gt;latlon (46.75, 9.80, 2200)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;latlon (46d 48' 44.553", 9d 50' 50.694", 1550)&lt;/i&gt;&lt;/b&gt; or &lt;b&gt;&lt;i&gt;xy (198754, 723458, 2200)&lt;/i&gt;&lt;/b&gt;</help>
				</parameter>
			</option>
			<option>
				<parameter key="NAME#" type="text" optional="true">
					<help>A descriptive station name to use. Example: "Davos::SLF-station" (default: STATION_#)</help>
				</parameter>
			</option>
			<option>
				<parameter key="ID#" type="text" optional="true">
					<help>The (short) station ID to use. It is recommended to define an ID as this will be used to apply data generators, filters, etc (default: ID_#)</help>
				</parameter>
			</option>
			<option>
			<parameter label="Add/Remove Parameter" type="selector">
				<parameter key="STATION#::%::TYPE" type="alternative" template="true">
					<option value="CST">
						<parameter key="STATION#::%::VALUE" type="number" format="decimal" precision="6" optional="false"/>
					</option>
					<option value="STEP">
						<parameter key="STATION#::%::VALUE_BEFORE" type="number" format="decimal" precision="6" optional="false"/>
						<parameter key="STATION#::%::STEP_DATE" type="datetime" optional="false"/>
						<parameter key="STATION#::%::VALUE_AFTER" type="number" format="decimal" precision="6" optional="false"/>
					</option>
					<option value="RECTANGLE">
						<parameter key="STATION#::%::VALUE" type="number" format="decimal" precision="6" optional="false"/>
						<parameter key="STATION#::%::STEP_START" type="datetime" optional="false"/>
						<parameter key="STATION#::%::VALUE_STEP" type="number" format="decimal" precision="6" optional="false"/>
						<parameter key="STATION#::%::STEP_STOP" type="datetime" optional="false"/>
					</option>
					<option value="STDPRESS"/>
					<help>Select how to generate values for this parameter (constant function, step function, rectangular function, constant standard barometric pressure)</help>
				</parameter>
				<reference name="METEOPARAMETERS"/>
				<help>Enter meteo parameter and define how to generate it</help>
			</parameter>
			</option>
			<help>Enter the generated station's coordinates and optionaly ids and names</help>
		</parameter>
	</parametergroup>

</inishell_include>
